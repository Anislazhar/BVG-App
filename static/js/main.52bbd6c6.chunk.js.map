{"version":3,"sources":["Services/Data.js","Components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["questions","questionText","answerOptions","answerText","nextId","result","Homepage","useState","usename","setUsename","currentQuestion","setCurrentQuestion","showTicket","setShowTicket","ticket","setTicket","useEffect","prompt","className","map","answerOption","onClick","answer","handleAnswerOptionClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LA6CeA,EA7CG,CAChB,CACEC,aAAc,yDACdC,cAAe,CACb,CAAEC,WAAY,kBAAmBC,OAAQ,GACzC,CAAED,WAAY,oBAAqBC,OAAQ,KAG/C,CACEH,aAAc,uDACdC,cAAe,CACb,CACEC,WAAY,uBACZE,OACE,+FAEJ,CACEF,WAAY,oCACZE,OACE,6FAEJ,CACEF,WAAY,mBACZE,OACE,+FAIR,CACEJ,aAAc,yDACdC,cAAe,CACb,CACEC,WAAY,oBACZE,OACE,8FAEJ,CACEF,WAAY,sBACZE,OACE,iGCaKC,MAjDf,WAAqB,IAAD,EACYC,mBAAS,IADrB,mBACXC,EADW,KACFC,EADE,OAE4BF,mBAAS,GAFrC,mBAEXG,EAFW,KAEMC,EAFN,OAGkBJ,oBAAS,GAH3B,mBAGXK,EAHW,KAGCC,EAHD,OAIUN,mBAAS,GAJnB,mBAIXO,EAJW,KAIHC,EAJG,KAmBlB,OAbAC,qBAAU,WACRP,EAAWQ,OAAO,6BACjB,IAYD,qCACE,sBAAKC,UAAU,SAAf,UACE,iDACA,6BAAKV,IACL,+EAEF,qBAAKU,UAAU,MAAf,SACGN,EACC,sBAAKM,UAAU,iBAAf,wBAA4CJ,KAE5C,qCACE,sBAAKI,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,6CAAgBR,EAAkB,OAEpC,qBAAKQ,UAAU,gBAAf,SAAgClB,EAAUU,GAAiBT,kBAE7D,qBAAKiB,UAAU,iBAAf,SACGlB,EAAUU,GAAiBR,cAAciB,KAAI,SAAAC,GAAY,OACxD,wBAAQC,QAAS,kBA7BC,SAAAC,GAC9B,GAAIA,EAAOjB,OAGT,OAFAU,EAAUO,EAAOjB,aACjBQ,GAAc,GAGhBF,EAAmBW,EAAOlB,QAuBSmB,CAAwBH,IAA/C,SAA+DA,EAAajB,2BChC7EqB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.52bbd6c6.chunk.js","sourcesContent":["const questions = [\n  {\n    questionText: \"How much time are you planning on staying in the city?\",\n    answerOptions: [\n      { answerText: \"less than 1 day\", nextId: 1 },\n      { answerText: \"Longer than 1 Day\", nextId: 2 },\n    ],\n  },\n  {\n    questionText: \"How much time are you planning to use the transport?\",\n    answerOptions: [\n      {\n        answerText: \"Less than 20 Minutes\",\n        result:\n          \"will cost 1,90 € , for more info check this link  https://www.bvg.de/de/Tickets/Preise\",\n      },\n      {\n        answerText: \"More than 20 Minutes till 2 hours\",\n        result:\n          \"will cost 2,90 €, for more info check this link https://www.bvg.de/de/Tickets/Preise\",\n      },\n      {\n        answerText: \"All the day long\",\n        result:\n          \"will cost 8,60 €, for more info check this link https://www.bvg.de/de/Tickets/Preise\",\n      },\n    ],\n  },\n  {\n    questionText: \"How much time are you planning on staying in the city?\",\n    answerOptions: [\n      {\n        answerText: \"Less than 1 week \",\n        result:\n          \"will cost 34,00 €, for more info check this link https://www.bvg.de/de/Tickets/Preise\",\n      },\n      {\n        answerText: \"longer than 1 week \",\n        result:\n          \"will cost 84,00 €, for more info check this link https://www.bvg.de/de/Tickets/Preise\",\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { useEffect, useState } from \"react\";\nimport questions from \"../Services/Data\";\n\nfunction Homepage() {\n  const [usename, setUsename] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showTicket, setShowTicket] = useState(false);\n  const [ticket, setTicket] = useState(0);\n\n  useEffect(() => {\n    setUsename(prompt(\"please enter your name\"));\n  }, []);\n\n  const handleAnswerOptionClick = answer => {\n    if (answer.result) {\n      setTicket(answer.result);\n      setShowTicket(true);\n      return;\n    }\n    setCurrentQuestion(answer.nextId);\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <h2>Welcome to BVG.</h2>\n        <h1>{usename}</h1>\n        <h2>We will help you to find your right Ticket</h2>\n      </div>\n      <div className=\"app\">\n        {showTicket ? (\n          <div className=\"ticket-section\">You ticket {ticket}</div>\n        ) : (\n          <>\n            <div className=\"question-section\">\n              <div className=\"question-count\">\n                <span>Question {currentQuestion + 1}</span>\n              </div>\n              <div className=\"question-text\">{questions[currentQuestion].questionText}</div>\n            </div>\n            <div className=\"answer-section\">\n              {questions[currentQuestion].answerOptions.map(answerOption => (\n                <button onClick={() => handleAnswerOptionClick(answerOption)}>{answerOption.answerText}</button>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Homepage;\n\n","import Homepage from \"./Components/Homepage\";\n\nfunction App() {\n  return (\n    <div>\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}